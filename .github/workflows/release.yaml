name: Build release artifacts and draft release

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:

jobs:
  build-and-release:
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
        include:
          - goos: darwin
            os: macos-latest
            cgo: 1
          - goos: linux
            os: ubuntu-latest
          - goos: windows
            os: ubuntu-latest
            suffix: .exe
    runs-on: ${{ matrix.os }}          
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: ${{ matrix.cgo }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable

      - name: Build
        run: go build -v -o nec-$GOOS-$GOARCH${{ matrix.suffix }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: nec-*-*
          tag_name: build_test
#   build-macos:
#     runs-on: macos-latest
#     strategy:
#       matrix:
#         goos: [darwin]
#         goarch: ["386", amd64, arm64]
#         exclude:
#           - goarch: arm64
#             goos: windows
          
#     env:
#       GOOS: ${{ matrix.goos }}
#       GOARCH: ${{ matrix.goarch }}
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-go@v3
#         with:
#           go-version: stable

#       - name: Build
#         run: go build -v -o nec-$GOOS-$GOARCH
#       - name: Release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: nec-*-*
#           tag_name: build_test
#       - name: Upload
#         uses: actions/upload-artifact@v3
#         with:
#           name: bytebase-linux
#           path: dist/bytebase*
#   build-darwin-binary:
#     runs-on: macos-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: pnpm/action-setup@v2.2.4
#         with:
#           version: 7.11.0
#       - uses: actions/setup-node@v3
#         with:
#           node-version: "18"
#           cache: pnpm
#           cache-dependency-path: "frontend/pnpm-lock.yaml"
#       - run: pnpm install --frozen-lockfile
#         working-directory: frontend
#       - run: pnpm release
#         working-directory: frontend
#       - uses: actions/setup-go@v3
#         with:
#           go-version: 1.19
#           check-latest: true
#           cache: true
#       - name: Build
#         uses: goreleaser/goreleaser-action@v3
#         with:
#           args: release --skip-publish --config scripts/.goreleaser-for-darwin.yaml
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: Upload
#         uses: actions/upload-artifact@v3
#         with:
#           name: bytebase-darwin
#           path: dist/bytebase*
#   draft-release:
#     needs: [build-linux-binary, build-darwin-binary]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: pnpm/action-setup@v2.2.4
#         with:
#           version: 7.11.0
#       - uses: actions/setup-node@v3
#         with:
#           node-version: "18"
#           cache: pnpm
#           cache-dependency-path: "frontend/pnpm-lock.yaml"
#       - run: pnpm install --frozen-lockfile
#         working-directory: frontend
#       - run: pnpm release
#         working-directory: frontend
#       - uses: actions/setup-go@v3
#         with:
#           go-version: 1.19
#           check-latest: true
#           cache: true
#       - name: Make directories
#         run: |
#           mkdir -p ./bytebase-build/linux
#           mkdir -p ./bytebase-build/darwin
#       - name: Download linux binaries
#         uses: actions/download-artifact@v3
#         with:
#           name: bytebase-linux
#           path: ./bytebase-build/linux
#       - name: Download darwin binaries
#         uses: actions/download-artifact@v3
#         with:
#           name: bytebase-darwin
#           path: ./bytebase-build/darwin
#       - name: Merge checksum file
#         run: |
#           cd ./bytebase-build
#           cat ./darwin/bytebase*checksums.txt >> checksums.txt
#           cat ./linux/bytebase*checksums.txt >> checksums.txt
#           rm ./darwin/bytebase*checksums.txt
#           rm ./linux/bytebase*checksums.txt
#       - name: Release
#         uses: goreleaser/goreleaser-action@v3
#         with:
#           args: release --config scripts/.goreleaser-release.yaml
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# on:
#   release:
#     types: [created]
#   workflow_dispatch:

# jobs:
#   releases-matrix:
#     name: Build and upload binaries
#     strategy:
#       matrix:
#         goos: [linux, windows, darwin]
#         goarch: ["386", amd64, arm64]
#         exclude:
#           - goarch: "386"
#             goos: darwin
#           - goarch: arm64
#             goos: windows
#         include:
#           - goos: darwin
#             os: macos-latest
#             cgo: 1
#           - goos: linux
#             os: ubuntu-latest
#           - goos: windows
#             os: ubuntu-latest
          
#     runs-on: ${{ matrix.os }}
#     steps:
#     - uses: actions/checkout@v3
#     - uses: wangyoucao577/go-release-action@v1.34
#       env:
#         CGO_ENABLED: ${{ matrix.cgo }}
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         goos: ${{ matrix.goos }}
#         goarch: ${{ matrix.goarch }}
#         md5sum: false
#         compress_assets: false
